{"version":3,"sources":["SuggestionList.js","App.js","index.js"],"names":["SuggestionList","class","this","props","suggestions","map","s","PureComponent","App","inputHandler","event","setState","input","target","value","state","isLoading","error","fetchSuggestions","fetch","then","response","json","data","names","catch","id","onClick","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAKqBA,G,mLAOjB,OACC,oBAAIC,MAAM,kBAAV,SACMC,KAAKC,MAAMC,YAAYC,KAAI,SAAAC,GAAO,OAAO,6BAAKA,a,GATbC,kBCAvBC,E,kDACnB,WAAYL,GAAQ,IAAD,8BACjB,cAAMA,IAURM,aAAe,SAACC,GACd,EAAKC,SACD,CAACC,MAAOF,EAAMG,OAAOC,SAXzB,EAAKC,MAAQ,CACXX,YAAa,GACbQ,MAAO,GACPI,WAAW,EACXC,MAAO,MANQ,E,gEA0BjBf,KAAKgB,qB,yCAGa,IAAD,OACjBhB,KAAKS,SAAS,CAAEK,WAAW,IAC3BG,MAAM,+EACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKZ,SAAS,CAAEP,YAAamB,EAAKC,MAAOR,WAAW,OACjES,OAAM,SAAAR,GAAK,OAAI,EAAKN,SAAS,CAAEM,QAAOD,WAAW,S,+BAG9C,IAAD,SAC4Bd,KAAKa,MAAhCX,EADD,EACCA,YACR,OAFO,EACcY,UAEZ,sBAAMf,MAAM,cAAZ,SACL,kCACE,gCACE,2EACA,wFAMN,sBAAMA,MAAM,cAAZ,SACE,kCACE,gCACE,2EACA,mDACA,cAAC,EAAD,CAAgBG,YAAaA,IAC7B,wBAAQH,MAAM,SAASyB,GAAG,sBAAsBC,QAAS,kBAAM,EAAKT,oBAApE,SACE,mBAAGU,KAAK,IAAR,wC,GA1DmBrB,iBCCjCsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c7c24d08.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport './SuggestionList.css';\r\n\r\n\r\nexport default class SuggestionList extends PureComponent {\r\n\r\n  static propTypes = {\r\n    suggestions: PropTypes.array\r\n  };\r\n\r\n  render() {\r\n    return (\r\n    \t<ul class=\"suggestion-list\">\r\n        \t{ this.props.suggestions.map(s => { return <li>{s}</li> })}\r\n        </ul>\r\n    );\r\n  }\r\n\r\n}\r\n","import './App.css';\r\nimport React, { PureComponent } from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport SuggestionList from \"./SuggestionList\";\r\n\r\nexport default class App extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      suggestions: [],\r\n      input: \"\",\r\n      isLoading: false,\r\n      error: null\r\n    };\r\n  }\r\n\r\n\r\n  inputHandler = (event) => {\r\n    this.setState(\r\n        {input: event.target.value}\r\n      );\r\n  }\r\n  /*\r\n        <input type=\"submit\" value=\"Suggest Name!\"/>\r\n        <input className=\"component-search-input\"\r\n          placeholder=\"Enter the name of your projects... Or just try it!\"\r\n          type='text'\r\n          onChange={this.myChangeHandler}\r\n        />\r\n  */\r\n\r\n  componentDidMount() {\r\n    this.fetchSuggestions()\r\n  }\r\n\r\n  fetchSuggestions() {\r\n    this.setState({ isLoading: true });\r\n    fetch(\"https://ttbzcunqd9.execute-api.us-east-1.amazonaws.com/kotlinifyProjectName\")\r\n        .then(response => response.json())\r\n        .then(data => this.setState({ suggestions: data.names, isLoading: false }))\r\n        .catch(error => this.setState({ error, isLoading: false }));\r\n  }\r\n\r\n  render() {\r\n    const { suggestions, isLoading } = this.state;\r\n    if (isLoading) {\r\n      return <form class=\"form-inline\">\r\n        <section>\r\n          <div>\r\n            <h2>Need a name for your next Kotlin project?</h2>\r\n            <h4>Hang on a second, we will find you a great one!</h4>\r\n          </div>\r\n        </section>\r\n      </form>\r\n    }\r\n    return (\r\n      <form class=\"form-inline\">\r\n        <section>\r\n          <div>\r\n            <h2>Need a name for your next Kotlin project?</h2>\r\n            <h4>Try one of these:</h4>\r\n            <SuggestionList suggestions={suggestions} /> \r\n            <button class=\"button\" id=\"give-me-more-button\" onClick={() => this.fetchSuggestions()}>\r\n              <a href=\"#\">Give me more!</a>\r\n            </button>\r\n          </div>\r\n        </section>\r\n      </form>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}